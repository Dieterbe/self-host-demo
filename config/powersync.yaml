# powersync.yaml
# Very similar to the config in the PowerSync dashboard, but a little more low-level
replication:
  connections:
    - type: postgresql
      sslmode: disable # okay for local/private network, not for public network

      # The PowerSync server container can access the Postgres DB via the DB's service name.
      # In this case the hostname is pg-db

      # The connection URI or individual parameters can be specified.
      # Individual params take precedence over URI params
      uri: ${PS_PG_URI}

      # Or use individual params

      # hostname: pg-db # From the Docker Compose service name
      # port: 5432
      # database: postgres
      # username: postgres
      # password: mypassword

      # SSL settings
      # Defaults to verify-full
      # sslmode: 'verify-full' or 'verify-ca' or 'disable'
      # Required for verify-ca, optional for verify-full
      # cacert: ${PS_PG_CA_CERT}

      # Include a certificate here for HTTPs
      # client_certificate: ${PS_PG_CLIENT_CERT}
      # client_private_key: ${PS_PG_CLIENT_PRIVATE_KEY}

# This is valid if using the `mongo` service defined in `ps-mongo.yaml`
storage:
  type: mongodb
  uri: ${PS_MONGO_URI}

# The port which the PowerSync API server will listen on
port: ${PS_PORT}

sync_rules:
  path: sync_rules.yaml

# Client authentication settings
client_auth:
  # Enable this if using Supabase Auth
  # supabase: true

  # JWKS URIs can be specified here.
  jwks_uri: ${PS_JWKS_URL}

  # IP ranges for JWKS URIs are limited to external IPs by default
  # Setting this to true allows local JWKs URIs
  allow_local_jwks: true

  # Optional static collection of public keys for JWT verification
  # jwks:
  #   keys:
  #     - kty: 'RSA'
  #       n: '${PS_JWK_N}'
  #       e: '${PS_JWK_E}'
  #       alg: 'RS256'
  #       kid: '${PS_JWK_KID}'

  audience: ['powersync-dev', 'powersync']
